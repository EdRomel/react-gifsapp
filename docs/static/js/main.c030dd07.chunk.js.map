{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKf,SACC,uBACCO,KAAO,OACPC,MAAST,EACTU,SAjBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCTZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UAAUH,GAD1C,+DAEHI,MAAMF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QARP,kBAWfM,GAXe,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACzB,ECF2B,SAACA,GAC5B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACTxB,EAAQC,GACNwB,MAAK,SAAAC,GACLH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGV,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QACtB,OACC,eAAC,WAAD,WACC,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEEH,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEiBDgB,EA3BM,WACpB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACC,eAAC,WAAD,WACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEE2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEtB,aADA,CACC,EAAD,CAECA,SAAUA,GADLA,YChBZ6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c030dd07.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\t// maneja el valor del estado\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\t// maneja el evento del formulario\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories( cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit = {handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype = 'text'\r\n\t\t\t\tvalue = {inputValue}\r\n\t\t\t\tonChange = { handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qqh3xTZM9H6YBhoLhX0WWNqKxAX6sAj8`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized.url,\r\n\t\t}\r\n\t});\r\n\treturn gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\t// console.log({ id, title, url });\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeIn' >\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading... </p>}\r\n\t\t\t<div className=\"card-grid\" >\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => (\r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t{...img}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category)\r\n\t\t\t.then(imgs => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [category])\r\n\r\n\treturn state;\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tsetCategories([...categories, 'HunterxHunter']);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category => (\r\n\t\t\t\t\t\t// return <li key={category}>{category}</li>\r\n\t\t\t\t\t\t<GifGrid\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}